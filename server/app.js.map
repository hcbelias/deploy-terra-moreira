{"version":3,"sources":["app.js"],"names":["Promise","require","app","server","createServer","default","startServer","angularFullstack","listen","port","ip","console","log","get","exports","module"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA,mBAASA,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;;AAIA;AACA;;;;;;;AAOA;AACA,IAAIC,MAAM,wBAAV;AACA,IAAIC,SAAS,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEAD,QAAQ,kBAAR,EAA4BI,OAA5B,CAAoCH,GAApC;AACAD,QAAQ,UAAR,EAAoBI,OAApB,CAA4BH,GAA5B;;AAEA;AACA,SAASI,WAAT,GAAuB;AACrBJ,MAAIK,gBAAJ,GAAuBJ,OAAOK,MAAP,CAAc,sBAAOC,IAArB,EAA2B,sBAAOC,EAAlC,EAAsC,YAAW;AACtEC,YAAQC,GAAR,CAAY,4CAAZ,EAA0D,sBAAOH,IAAjE,EAAuEP,IAAIW,GAAJ,CAAQ,KAAR,CAAvE;AACD,GAFsB,CAAvB;AAGD;;AAED,4BAAaP,WAAb;;AAEA;AACAQ,UAAUC,OAAOD,OAAP,GAAiBZ,GAA3B","file":"app.js","sourcesContent":["/**\r\n * Main application file\r\n */\r\n\r\n'use strict';\r\n\r\nimport express from 'express';\r\nimport mongoose from 'mongoose';\r\nmongoose.Promise = require('bluebird');\r\nimport config from './config/environment';\r\nimport http from 'http';\r\n\r\n// Connect to MongoDB\r\n/*mongoose.connect(config.mongo.uri, config.mongo.options);\r\nmongoose.connection.on('error', function(err) {\r\n  console.error('MongoDB connection error: ' + err);\r\n  process.exit(-1);\r\n});\r\n*/\r\n\r\n// Setup server\r\nvar app = express();\r\nvar server = http.createServer(app);\r\n\r\nrequire('./config/express').default(app);\r\nrequire('./routes').default(app, config);\r\n\r\n// Start server\r\nfunction startServer() {\r\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\r\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\r\n  });\r\n}\r\n\r\nsetImmediate(startServer);\r\n\r\n// Expose app\r\nexports = module.exports = app;\r\n"],"sourceRoot":"/source/"}